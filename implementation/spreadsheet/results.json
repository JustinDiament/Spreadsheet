{
  "suites": {
    "title": "",
    "fullTitle": "",
    "suites": [],
    "tests": [
      {
        "title": "should return an array of size 2 with a valid input",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return an array of size 2 with a valid input",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return column as first value given valid input",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return column as first value given valid input",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return row as second value given valid input",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return row as second value given valid input",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 1 uppercase and 1 digit positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 1 digit positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 1 uppercase and 2 digit positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 1 uppercase and 2 digit positive ending 0",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive ending 0",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 1 uppercase and 2 digit positive leading zero",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive leading zero",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 2 uppercase and 1 digit positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 1 digit positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 2 uppercase and 2 digit positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 2 digit positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given 2 uppercase and 3 digit positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 3 digit positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should return correct indices given >3 uppercases and >3 digits positive",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given >3 uppercases and >3 digits positive",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given only number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given only number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 lowercase letter and 1 digit number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 lowercase letter and 1 digit number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 2 lowercase letters and 1 digit number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 lowercase letters and 1 digit number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 nonletter character and 1 digit number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 nonletter character and 1 digit number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 lowercase letter and no number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 lowercase letter and no number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 uppercase letter and 0",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase letter and 0",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 2 uppercase letter and 0",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 uppercase letter and 0",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 2 mismatched uppercase letter and number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 mismatched uppercase letter and number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 2 mismatched uppercase letter and no number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 mismatched uppercase letter and no number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given empty string",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given empty string",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given number then uppercase letter",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given number then uppercase letter",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given space between letter and number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given space between letter and number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given leading space",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given leading space",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given trailing space",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given trailing space",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given only space",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given only space",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 uppercase, 1 invalid character, and 1 number",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase, 1 invalid character, and 1 number",
        "status": "PASS",
        "error": null
      },
      {
        "title": "should throw error given 1 uppercase, and 1 negative",
        "fullTitle": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase, and 1 negative",
        "status": "PASS",
        "error": null
      }
    ],
    "pass": 28,
    "fail": 0
  },
  "stats": {
    "numFailedTestSuites": 0,
    "numFailedTests": 0,
    "numPassedTestSuites": 1,
    "numPassedTests": 28,
    "numPendingTestSuites": 0,
    "numPendingTests": 0,
    "numRuntimeErrorTestSuites": 0,
    "numTodoTests": 0,
    "numTotalTestSuites": 1,
    "numTotalTests": 28,
    "openHandles": [],
    "snapshot": {
      "added": 0,
      "didUpdate": false,
      "failure": false,
      "filesAdded": 0,
      "filesRemoved": 0,
      "filesRemovedList": [],
      "filesUnmatched": 0,
      "filesUpdated": 0,
      "matched": 0,
      "total": 0,
      "unchecked": 0,
      "uncheckedKeysByFile": [],
      "unmatched": 0,
      "updated": 0
    },
    "startTime": 1701334418036,
    "success": false,
    "testResults": [
      {
        "leaks": false,
        "numFailingTests": 0,
        "numPassingTests": 28,
        "numPendingTests": 0,
        "numTodoTests": 0,
        "openHandles": [],
        "perfStats": {
          "end": 1701334420329,
          "runtime": 2140,
          "slow": false,
          "start": 1701334418189
        },
        "skipped": false,
        "snapshot": {
          "added": 0,
          "fileDeleted": false,
          "matched": 0,
          "unchecked": 0,
          "uncheckedKeys": [],
          "unmatched": 0,
          "updated": 0
        },
        "testFilePath": "C:\\Users\\aidan\\Dropbox\\NU\\Semester7\\CS 4530\\team508-project\\implementation\\spreadsheet\\src\\models\\tests\\util.spec.ts",
        "testResults": [
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 2,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return an array of size 2 with a valid input",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 2,
            "retryReasons": [],
            "status": "passed",
            "title": "should return an array of size 2 with a valid input"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return column as first value given valid input",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return column as first value given valid input"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return row as second value given valid input",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return row as second value given valid input"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 1 digit positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 1 uppercase and 1 digit positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 1 uppercase and 2 digit positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive ending 0",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 1 uppercase and 2 digit positive ending 0"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 1 uppercase and 2 digit positive leading zero",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 1 uppercase and 2 digit positive leading zero"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 1 digit positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 2 uppercase and 1 digit positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 2 digit positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 2 uppercase and 2 digit positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given 2 uppercase and 3 digit positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given 2 uppercase and 3 digit positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should return correct indices given >3 uppercases and >3 digits positive",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should return correct indices given >3 uppercases and >3 digits positive"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 7,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given only number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given only number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 lowercase letter and 1 digit number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 lowercase letter and 1 digit number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 lowercase letters and 1 digit number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 2 lowercase letters and 1 digit number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 nonletter character and 1 digit number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 nonletter character and 1 digit number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 lowercase letter and no number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 lowercase letter and no number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase letter and 0",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 uppercase letter and 0"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 uppercase letter and 0",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 2 uppercase letter and 0"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 mismatched uppercase letter and number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 2 mismatched uppercase letter and number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 2 mismatched uppercase letter and no number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 2 mismatched uppercase letter and no number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given empty string",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given empty string"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given number then uppercase letter",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given number then uppercase letter"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given space between letter and number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given space between letter and number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given leading space",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given leading space"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 1,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given trailing space",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given trailing space"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given only space",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given only space"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase, 1 invalid character, and 1 number",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 uppercase, 1 invalid character, and 1 number"
          },
          {
            "ancestorTitles": [
              "Testing the Util Class",
              "Testing getIndicesFromLocation"
            ],
            "duration": 0,
            "failureDetails": [],
            "failureMessages": [],
            "fullName": "Testing the Util Class Testing getIndicesFromLocation should throw error given 1 uppercase, and 1 negative",
            "invocations": 1,
            "location": null,
            "numPassingAsserts": 1,
            "retryReasons": [],
            "status": "passed",
            "title": "should throw error given 1 uppercase, and 1 negative"
          }
        ],
        "failureMessage": null
      }
    ],
    "wasInterrupted": false
  }
}